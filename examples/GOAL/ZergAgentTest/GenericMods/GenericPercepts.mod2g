use GenericPredicates as knowledge.
order = linearall.

module GenericPercepts {
	
	% The handling of the resources percept
	if bel(minerals(OM)), percept(resources(M, _, _, _)) then delete(minerals(OM)) + insert(minerals(M)).
	
	% The handling of the isMorphing percept
	forall percept(unit(true, Type,Id,_,_,Conditions)), bel(member(morphing, Conditions)), not(bel(isMorphing(Type, Id))) 
	do insert(isMorphing(Type, Id)).
	forall bel(isMorphing(Type, Id)), percept(unit(true, Type,Id,_,_,Conditions)), not(bel(member(morphing, Conditions))) 
	do delete(isMorphing(Type, Id)).
	forall bel(isMorphing(Type, Id)), not(percept(unit(true, Type,Id,_,_,_))) do delete(isMorphing(Type, Id)).
	
	% The handling of the unitAmount percept
	forall percept(unitAmount(Type,Count)), not(bel(unitAmount(Type,Count))) do insert(unitAmount(Type,Count)).
	forall bel(unitAmount(Type,Count)),not(percept(unitAmount(Type,Count))) do delete(unitAmount(Type,Count)).
}
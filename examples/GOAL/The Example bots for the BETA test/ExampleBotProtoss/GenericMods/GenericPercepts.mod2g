use GenericPredicates as knowledge.
order = linearall.

module GenericPercepts {
	
	% The handling of the resources percept
	if bel(minerals(OM)), percept(resources(M, _, _, _)) then delete(minerals(OM)) + insert(minerals(M)).
	if bel(gas(OG)), percept(resources(_, G, _, _)) then delete(gas(OG)) + insert(gas(G)).
	
	% The handling of the friendly units percept
	forall percept(unit(true, Type,Id,Health,Shields,_)), bel(self(MyId,_), not(friendly(Type,Id,Health,Shields)), MyId \= Id) 
	do insert(friendly(Type, Id, Health, Shields)).
	forall bel(friendly(Type, Id, Health, Shields)) , not(percept(unit(true, Type,Id,Health,Shields,_)))
	do delete(friendly(Type,Id,Health, Shields)).
	
	% The handling of the unitAmount percept
	forall bel(unitAmount(Type,Count)),not(percept(unitAmount(Type,Count))) do delete(unitAmount(Type,Count)).
	forall percept(unitAmount(Type,Count)), not(bel(unitAmount(Type,Count))) do insert(unitAmount(Type,Count)).
}
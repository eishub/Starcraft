use ZergZergling as knowledge.

module ZergZerglingEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Percepts --------------------------------------- %%%%%%%%%%%%%%%
	
	if percept(status(_,_,X1,Y1)), bel(position(X2,Y2), (X1 \= X2 ; Y1 \= Y2)) then delete(position(X2,Y2)) + insert(position(X1,Y1)).
	
	if percept(status(H1,_,_,_)), bel(hitPoints(H2), H1 \= H2) then delete(hitPoints(H2)) + insert(hitPoints(H1)).
		
	forall percept(unit(true, Type,Id,Health,Shields,IsFlying,X,Y)), bel(self(MyId,_), not(friendly(Type,Id,Health,Shields,X,Y)), MyId \= Id) 
	do insert(friendly(Type, Id, Health, Shields, X, Y)).
	forall bel(friendly(Type, Id, Health, Shields, X, Y)) , not(percept(unit(true, Type,Id,Health,Shields,IsFlying,X,Y)))
	do delete(friendly(Type,Id,Health, Shields,X,Y)).
		
	forall percept(unit(false, Type,Id,Health,Shields,IsFlying,X,Y)), bel(not(enemy(Type,Id,Health,Shields,IsFlying,X,Y))) 
	do insert(enemy(Type,Id,Health,Shields,IsFlying,X,Y)).
	forall bel(enemy(Type, Id, Health, Shields,IsFlying ,X, Y)) , not(percept(unit(false, Type,Id,Health,Shields,IsFlying,X,Y)))
	do delete(enemy(Type,Id,Health, Shields,IsFlying,X,Y)).	
		
	forall percept(unitAmount(Type,Count)), not(bel(unitAmount(Type,Count))) do insert(unitAmount(Type,Count)).
	forall bel(unitAmount(Type,Count)),not(percept(unitAmount(Type,Count))) do delete(unitAmount(Type,Count)).
		
	%%%%%%%%%%%%%%% --------------------------------------- Messaging --------------------------------------- %%%%%%%%%%%%%%%
	
	if bel(not(ready(_)), position(X1, Y1), groupLocation(X2, Y2), distance(X1, Y1, X2, Y2, D), D < 10,
	self(Id, _)) then (overMind).send(ready(Id)) + insert(ready(Id)).
	
	if (_).sent(attack) then insert(attack).
		
	%%%%%%%%%%%%%%% ----------------------------------------- GOALS ---------------------------------------- %%%%%%%%%%%%%%%
	
	%if bel(hitPoints(H), H < 35, position(X, Y)) then adopt(move(X + 5, Y + 5)).
	
	if bel(not(groupLocation(X, Y)), chokepoint(X, Y), enemyBase(X1, Y1), distance(X, Y, X1, Y1, D), D < 25) 
	then insert(groupLocation(X, Y)) + adopt(attack(X, Y)).
	
	if bel(enemyBase(X, Y), unitAmount("Zerg Zergling",Count), Count > 5) then adopt(attack2(X,Y)).
		
	if bel(enemy(_, Id, _, _, 'false', X, Y)) then adopt(attack(X, Y)).
}
use "../../../eisbw/target/eisbw-0.0.1-SNAPSHOT-jar-with-dependencies.jar" as environment with
	map="(2)Destination.scx",
	race="Zerg",
	starcraft_location="C:\\Starcraft No Install",
	debug="true".
	
define zergDrone as agent {
	use ZergDrone.ZergDrone as main module.
	use ZergDrone.ZergDroneInit as init module.
	use ZergDrone.ZergDroneEvent as event module.
} 

define zergHatchery as agent {
	use ZergHatchery.ZergHatcheryInit as init module.
	use ZergHatchery.ZergHatchery as main module.
	use ZergHatchery.ZergHatcheryEvent as event module.
}	

define zergZergling as agent{
	use ZergZergling.ZergZerglingInit as init module.
	use ZergZergling.ZergZergling as main module.
	use ZergZergling.ZergZerglingEvent as event module.
}

define zergSpawningPool as agent{
	use ZergSpawningPool.ZergSpawningPoolInit as init module.
	use ZergSpawningPool.ZergSpawningPool as main module.
	use ZergSpawningPool.ZergSpawningPoolEvent as event module.
}

define zergCreepColony as agent{
	use ZergCreepColony.ZergCreepColony as main module.
	use ZergCreepColony.ZergCreepColonyEvent as event module.	
}

define zergLair as agent{
	use ZergLair.ZergLairInit as init module.
	use ZergLair.ZergLair as main module.
	use ZergLair.ZergLairEvent as event module.	
}

define zergMutalisk as agent{
	use ZergMutalisk.ZergMutaliskInit as init module.
	use ZergMutalisk.ZergMutalisk as main module.
	use ZergMutalisk.ZergMutaliskEvent as event module.	
}

define overMind as agent {
	use OverMind.OverMindEvent as main module.	
}

launchpolicy{
	when type = unknown launch overMind.
	when type = zergHatchery launch zergHatchery.
	when type = zergZergling launch zergZergling.
	when type = zergSpawningPool launch zergSpawningPool.
	when type = zergDrone launch zergDrone.
	when type = zergCreepColony launch zergCreepColony.
	when type = zergLair launch zergLair.
	when type = zergMutalisk launch zergMutalisk.
	}
use TerranSCV as actionspec.
use TerranSCV as knowledge.

module TerranSCVEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Percepts --------------------------------------- %%%%%%%%%%%%%%%
	
	if percept(supply(C,Max)), bel(supply(OC, OMax)) then delete(supply(OC, OMax)) + insert(supply(C,Max)).
	
	if percept(minerals(M)), bel(minerals(OM), not(M = OM)) then insert(minerals(M)) + delete(minerals(OM)).
	
	if percept(gas(M)), bel(gas(OM), not(M = OM)) then insert(gas(M)) + delete(gas(OM)).
		
	forall percept(unit(Unit,Number)), bel(not(unit(Unit,Number))) do insert(unit(Unit,Number)).
	forall bel(unit(Unit,Number)), not(percept(unit(Unit,Number))) do delete(unit(Unit,Number)).
		
	if percept(gathering(X)), bel(not(gathering(X))) then insert(gathering(X)).
	if bel(gathering(X)), not(percept(gathering(X))) then delete(gathering(X)).
				
	forall percept(mineralField(Id,Amount,_,X,Y)), not(bel(mineralField(Id,Amount,X,Y))) do insert(mineralField(Id,Amount,X,Y)).
	forall percept(mineralField(Id,Amount1,_,X,Y)), bel(mineralField(Id,Amount2,X,Y), (Amount1 \= Amount2)) do delete(mineralField(Id,Amount2,X,Y)).
		
	forall percept(friendly(Name,Type,Id,Health,Shields,X,Y)), bel(id(MyId), not(friendly(Name,Type,Id,X,Y)), MyId \= Id) 
	do insert(friendly(Name,Type,Id,X,Y)).
	forall bel(friendly(Name,Type,Id,X,Y)), not(percept(friendly(Name,Type,Id,_,_,X,Y))) do delete(friendly(Name,Type,Id,X,Y)).
		
	if percept(position(X1,Y1)), bel(position(X2,Y2), (X1 \= X2 ; Y1 \= Y2)) then insert(position(X1,Y1)) + delete(position(X2,Y2)).
		
	forall percept(constructionSite(X,Y)), not(bel(constructionSite(X,Y))) do insert(constructionSite(X,Y)).
	forall bel(constructionSite(X,Y)), not(percept(constructionSite(X,Y))) do delete(constructionSite(X,Y)).
		
	if percept(constructing), not(bel(constructing)) then insert(constructing).
	if bel(constructing), not(percept(constructing)) then delete(constructing).
		
	if percept(refinery(Id, Resources, Group)), bel(not(refinery(Id, Resources, Group))) then insert(refinery(Id, Resources, Group)).
	if bel(refinery(Id, Resources, Group)), not(percept(refinery(Id, Resources, Group))) then delete(refinery(Id, Resources, Group)).
		
	forall percept(workerActivity(ID,ACT)), bel(not(workerActivity(ID,ACT))) do insert(workerActivity(ID,ACT)).
	forall bel(workerActivity(ID,ACT)), not(percept(workerActivity(ID,ACT))) do delete(workerActivity(ID,ACT)).
		
	%%%%%%%%%%%%%%% --------------------------------------- GOALS --------------------------------------- %%%%%%%%%%%%%%%
		
	if bel(builder, commandCenter(X,Y), chokepointlocation(X, Y, TX, TY), friendly(_ ,"Terran Barracks",_ ,_,_),
	not(friendly(_ ,"Terran Bunker",_ ,_,_)), buildingLocation(TX, TY, RX, RY)) then adopt(build("Terran Bunker", RX, RY)).
	
	if bel(builder, supply(C, Max), (Max - C) < 10, buildLocation(X, Y)) then adopt(build("Terran Supply Depot", X, Y)).
	
	if percept(vespeneGeyser(_, _, _, X , Y)), bel(not(busy), minerals(M), M > 100, 
	friendly(_ ,"Terran Command Center",_ ,BX,BY) ,distance(BX, BY, X, Y, D), D < 10) then adopt(build("Terran Refinery", X, Y)).
	
	if bel(mineralField(_,Amount,MX,MY), builder ,Amount < 500 ,friendly(_ ,"Terran Command Center",_ ,X,Y)
	,nearestBase(X, Y, NX, NY), minerals(M), M >= 400, distance(X, Y, MX, MY, Res), Res < 7) then adopt(build("Terran Command Center", X, Y)).
	
	if bel(not(busy), buildLocation(X, Y), not(unit("Terran Engineering Bay", _)), minerals(M), M > 125) 
	then adopt(build("Terran Engineering Bay", X, Y)).
	
	if bel(((unit("Terran Barracks",Num), Num < 3) ; not(unit("Terran Barracks",_))), 
	buildLocation(X, Y), not(busy), minerals(M), M > 100) then adopt(build("Terran Barracks", X, Y)).
	
	if bel(not(builder), unit("Terran Barracks", _), not(unit("Terran Academy", _)), buildLocation(X, Y), not(busy), minerals(M), M > 150)
	then adopt(build("Terran Academy", X, Y)).
	
	if bel(not(busy), addonBuildingLocation(X, Y), not(unit("Terran Factory", _)), minerals(M), M > 200, gas(G), G > 100, 
	unit("Terran Barracks", _)) then adopt(build("Terran Factory", X, Y)).
	
	if bel(not(busy), addonBuildingLocation(X, Y), not(unit("Terran Starport", _)), minerals(M), M > 150, 
	gas(G), G > 100, unit("Terran Factory", _)) then adopt(build("Terran Starport", X, Y)).
	
	if bel(not(busy), buildLocation(X, Y), unit("Terran Starport", _), not(unit("Terran Science Facility", _)), 
	minerals(M), M > 100, gas(G), G > 150) then adopt(build("Terran Science Facility", X, Y)).
		
	if bel(mineralField(Id,Amount,X,Y), friendly(_, "Terran Command Center", _, CX, CY), distance(X,Y,CX,CY,L), L<8) then adopt(gather(Id)).
	
	%%%%%%%%%%%%%%% --------------------------------------- Messaging --------------------------------------- %%%%%%%%%%%%%%%
	
	forall (Sender).sent(builder) do insert(builder).
}
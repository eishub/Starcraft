use TerranFactory as knowledge.
use "../GenericMods/GenericPercepts" as module.

module TerranFactoryEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Percepts --------------------------------------- %%%%%%%%%%%%%%%
	
	% The generic percepts most units use
	if true then GenericPercepts.
	
	% The handling of the supply percept
	if percept(resources(_, _, C, T)), bel(supply(OC, OT), (not(OC == C) ; not(OT == T))) then delete(supply(OC, OT)) + insert(supply(C, T)).
	
	% The handling of the queueSize percept
	if percept(queueSize(N)), bel(queueSize(No), No \= N) then delete(queueSize(No)) + insert(queueSize(N)).
	
	%if percept(condition(NewList)), bel(member('Terran Machine Shop', NewList), condition(OldList), not(member('Terran Machine Shop', OldList))) then insert(shop).
	%if bel(shop), percept(condition(List)), bel(not(member('Terran Machine Shop', List))) then delete(shop).
	if percept(condition(List)) then print(List).
	
	%%%%%%%%%%%%%%% ----------------------------------------- GOALS ---------------------------------------- %%%%%%%%%%%%%%%
	
	if not(goal(shop)), bel(not(shop)) then adopt(shop).
	
	% If there are no tanks yet or less than 50 start training tanks
	if not(goal(unitAmount("Terran Siege Tank", 20))), bel(not(unitAmount("Terran Siege Tank", 20))) then adopt(unitAmount("Terran Siege Tank", 20)).
	
	
	% If no rallyPoint set yet, start setting one
	if not(goal(rallyPoint(_,_))), bel(chokepoint(X, Y), enemyBase(X1, Y1), distance(X, Y, X1, Y1, D), D < 30, D > 25,
	not(rallyPoint(X, Y))) then adopt(rallyPoint(X,Y)).
}
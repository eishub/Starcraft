use TerranMarine as knowledge.
use "../GenericMods/GenericPercepts" as module.


module TerranMarineEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Percepts --------------------------------------- %%%%%%%%%%%%%%%
	
	% The generic percepts most units use
	if true then GenericPercepts.
	
	% Insert enemy when one is perceived
	forall percept(unit(false, Type,Id,Health,Shields,IsFlying,X,Y)), bel(not(enemy(Type,Id,Health,Shields,IsFlying,X,Y))) 
	do insert(enemy(Type,Id,Health,Shields,IsFlying,X,Y)).
	forall bel(enemy(Type, Id, Health, Shields,IsFlying ,X, Y)) , not(percept(unit(false, Type,Id,Health,Shields,IsFlying,X,Y)))
	do delete(enemy(Type,Id,Health, Shields,IsFlying,X,Y)).	
	
	% The handling of condition stim
	if percept(condition(NewList)), bel(member(stimmed, NewList), condition(OldList), not(member(stimmed, OldList))) then insert(stimmed).
	if bel(stimmed), percept(condition(List)), bel(not(member(stimmed, List))) then delete(stimmed).
	
	% The handling of the position 
	if percept(status(_,_,X1,Y1)), bel(position(X2,Y2), (X1 \= X2 ; Y1 \= Y2)) then delete(position(X2,Y2)) + insert(position(X1,Y1)).
	
	%%%%%%%%%%%%%%% --------------------------------------- Messaging --------------------------------------- %%%%%%%%%%%%%%%
	
	% If at grouping location, tell Raynor ready
	if bel(not(ready(_)), position(X1, Y1), enemyBase(X2, Y2), distance(X1, Y1, X2, Y2, D), D < 50,
	self(Id, _)) then (raynor).send(ready(Id)) + insert(ready(Id)).
	
	% If told to attack insert it to the knowledge base
	if (_).sent(attack) then insert(attack).
	
	%%%%%%%%%%%%%%% ----------------------------------------- GOALS ---------------------------------------- %%%%%%%%%%%%%%%
	
	% If bel to attack then adopt goal to attack enemy base
	%if not(goal(attack(_, _))), bel(attack, enemyBase(X, Y)) then adopt(attack(X, Y)).
	
	if (_).sent(stim) then adopt(stimmed).
	
	% if someone is attacking and not flying, kill him
	%if not(goal(attack(_))), percept(attacking(Id, _)), bel(enemy(_, Id,_,_,false,_,_)) then adopt(attack(Id)). 
}
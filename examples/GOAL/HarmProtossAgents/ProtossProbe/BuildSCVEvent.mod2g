use ProtossSCV as actionspec.
use ProtossSCV as knowledge.

module ProtossSCVEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Percepts --------------------------------------- %%%%%%%%%%%%%%%
	
	if percept(resources(Min,Gas,C,Max)), bel(supply(OC, OMax),minerals(OM), gas(Go))
		then delete(supply(OC, OMax)) + insert(supply(C,Max)) + delete(minerals(OM))+ insert(minerals(Min))+
		delete(gas(Go))+ insert(gas(Gas)).
				
	forall percept(mineralField(Id,Amount,_,X,Y)), not(bel(mineralField(Id,Amount,X,Y))) do insert(mineralField(Id,Amount,X,Y)).
	forall percept(mineralField(Id,Amount1,_,X,Y)), bel(mineralField(Id,Amount2,X,Y), (Amount1 \= Amount2)) do delete(mineralField(Id,Amount2,X,Y)).

	forall percept(constructionSite(X,Y,Z)), not(bel(constructionSite(X,Y,Z))) do insert(constructionSite(X,Y,Z)).
	forall bel(constructionSite(X,Y,Z)), not(percept(constructionSite(X,Y,Z))) do delete(constructionSite(X,Y,Z)).
		
	if percept(constructing), not(bel(constructing)) then insert(constructing).
	if bel(constructing), not(percept(constructing)) then delete(constructing).
		
	if percept(refinery(Id, Resources, Group)), bel(not(refinery(Id, Resources, Group))) then insert(refinery(Id, Resources, Group)).
	if bel(refinery(Id, Resources, Group)), not(percept(refinery(Id, Resources, Group))) then delete(refinery(Id, Resources, Group)).
	
	if percept(condition(X)), bel(condition(Y)) then insert(condition(X))+delete(condition(Y)).
	
	forall percept(unitAmount(Type,Count)), not(bel(unitAmount(Type,Count))) do insert(unitAmount(Type,Count)).
	forall bel(unitAmount(Type,Count)),not(percept(unitAmount(Type,Count))) do delete(unitAmount(Type,Count)).
		
		
	%%%%%%%%%%%%%%% --------------------------------------- GOALS --------------------------------------- %%%%%%%%%%%%%%%
	if bel(buildPylonLocation(X,Y), supply(C,M), D is M-C, D<8),not(goal(build('Protoss Pylon',_,_))) 
		then adopt(build('Protoss Pylon',X,Y)).
	if bel(buildLocation(X,Y), minerals(Min),Min > 150,unitAmount('Protoss Gateway',G),G<2),not(goal(build('Protoss Gateway',_,_))) 
		then adopt(build('Protoss Gateway',X,Y)).
	if bel(buildLocation(X,Y), minerals(Min),Min > 150,not(unitAmount('Protoss Gateway',G))),not(goal(build('Protoss Gateway',_,_))) 
		then adopt(build('Protoss Gateway',X,Y)).
}
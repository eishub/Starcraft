module attack{
	knowledge{
		findEnemy(Id):- percept(enemy(_,_,_,_,_,_)),
				findall( (EId,BestX,BestY),percept(enemy(_,EId,BestX,BestY,_,_)), [C1|Rest]),
				findEnemy(C1, Rest, (Id,X,Y)).
										
		findEnemy(Enemy, [], Enemy).
		findEnemy((BestEId,BestX,BestY), [(Eid,X,Y)|Rest], Enemy) :-
	  								walkDistanceTo(BestX,BestY,Res),
	  								walkDistanceTo(X,Y,Res1), 
	  								Res >Res1 -> findEnemy((EId,X,Y), Rest, Enemy)
	  											;findEnemy((BestEId,BestX,BestY), Rest, Enemy).	
	  	distance(X1,Y1,X2,Y2,Res):- Res is sqrt((X2-X1)**2 + (Y2-Y1)**2).
	}
	goals{
		defend.
		charge.
	}
	
	program{
		if bel(received(Sender,lastSpottedEnemy(Id,X,Y))) then delete(received(Sender,lastSpottedEnemy(Id,X,Y)))+insert(lastSpottedEnemy(Id,X,Y)) + insert(defend).
		
		
		if goal(charge),bel(lastSpottedEnemy(Id,X,Y),findEnemy(EId)) then attack(EId).
		if goal(charge),bel(lastSpottedEnemy(Id,X,Y)) then move(X,Y).
		
		
		if goal(defend),bel(findEnemy(EId), percept(enemy(_,EId,Wx,Wy,_,_)),percept(friendly(_,'Terran Command Center',_,Wxc,Wyc,_,_)),distance(Wx,Wy,Wxc,Wyc,Distance),Distance<125) then attack(EId).
		
	}
	
	actionspec {	
		attack(Id) {
			pre {true}
			post {true}
		}
		move(X,Y) {
			pre {true}
			post {true}
		}
	}
}
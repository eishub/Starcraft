
module handleConstruction{
	#import "BuildingDatabase.pl".			
	%#import "ResourceKnowledge.pl".		
	
	knowledge{
		canAfford(Type) :- cost(Type, CostM, CostG, CostS),
		minerals(M), 
		gas(G), 
		supply(S,TS), 
		DiffS is TS - S, 
		CostM =< M, 
		CostG =< G, 
		CostS =< DiffS.
	}
	
	goals{
		build('Terran Supply Depot',1).
		build('Terran Barracks',1).
		build('Terran Refinery',1).
		build('Terran Academy',1).
			
	}
	beliefs{
		build("",0).
	}
	program[order=linearall]{
		%supply depot
		%request for resource
		
		if bel(percept(unit(Type,Amount)),build(build(Type,Old))),goal(build(Type,_)) then delete(build(build(Type,Old)))+insert(build(build(Type,Amount))).
		if bel(percept(unit(Type,Amount)),not(build(build(Type,_)))),goal(build(Type,_)) then insert(build(build(Type,Amount))).
		if bel(received(Sender,vespene(X,Y))) then insert(vespene(X,Y)).
		
		
		if a-goal(build(Type,Amount)),bel(shouldConstruct(Type), 
				isBuilding(Type),
				chooseWorker(Type,WorkerId,X,Y),
				percept(id(Id)),
				WorkerId = Id) then {
							if bel(gather(vespene,Id,X,Y)) then delete(gather(vespene,Id,X,Y)).	
							if true then build(Type, X, Y) .					
				}
		
			}
	actionspec{
		build(Type,X,Y) {
			pre {canAfford(Type)}
			post { true }
		}	
	}
		
}

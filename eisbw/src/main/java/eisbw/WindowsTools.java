package eisbw;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Danny & Harm - The windowstool for starting the chaoslauncher and
 *         writing the menu script.
 *
 */
public class WindowsTools {

  private WindowsTools() {
    // Private constructor to hide the public one.
  }

  /**
   * Check if a process is running on the system.
   * 
   * @param process
   *          the name of the process.
   * @return true iff a process is running.
   */
  public static boolean isProcessRunning(String process) {
    try {
      Process proc = Runtime.getRuntime().exec("tasklist.exe");
      BufferedReader stdInput = new BufferedReader(new InputStreamReader(proc.getInputStream()));

      String line;
      while ((line = stdInput.readLine()) != null) {
        if (line.contains(process)) {
          stdInput.close();
          return true;
        }
      }
      stdInput.close();
    } catch (IOException exception) {
      Logger.getLogger("StarCraft Logger").log(Level.SEVERE, "Could not read processes.",
          exception);
    }
    return false;
  }

  /**
   * Starts the Chaoslauncher with launch rules.
   * 
   * @param race
   *          the race specified in the mas2g
   * @param map
   *          the map specified in the mas2g
   * @param scDir
   *          the starcraft installation directory in the mas2g.
   * @param autoMenu
   *          the automenu (single- or multi-player) specified in the mas2g
   * @param enemyRace
   *          the enemy race
   * @throws IOException
   *           throws exception when BWAPI.ini cannot be written.
   */
  public static void startChaoslauncher(String race, String map, String scDir, String autoMenu,
      String enemyRace) throws IOException {
    populateInitFile(race, map, scDir, autoMenu, enemyRace);
    Runtime.getRuntime().exec(scDir + "\\Chaoslauncher\\Chaoslauncher.exe", null,
        new File(scDir + "\\Chaoslauncher\\"));
  }

  private static void populateInitFile(String race, String map, String scDir, String autoMenu,
      String enemyRace) {
    String bwapiDest = scDir + "\\bwapi-data\\bwapi.ini";

    String iniFile = getIniFile(race, map, autoMenu, enemyRace);

    try {
      BufferedWriter out = new BufferedWriter(new FileWriter(new File(bwapiDest)));
      out.write(iniFile);
      out.close();
    } catch (Exception exception) {
      Logger.getLogger("StarCraft Logger").log(Level.SEVERE, "Could not write config file.",
          exception);
    }
  }

  protected static String getIniFile(String race, String map, String autoMenu, String enemyRace) {
    String newLine = System.getProperty("line.separator");
    String iniFile = "";
    iniFile += ";Generated by GOAL launcher" + newLine;

    iniFile += "[ai]" + newLine;
    iniFile += "ai     = NULL" + newLine + newLine;

    iniFile += "[auto_menu]" + newLine;
    iniFile += "auto_menu = " + autoMenu + newLine + newLine;

    iniFile += "pause_dbg = OFF" + newLine + newLine;

    iniFile += "auto_restart = OFF" + newLine + newLine;

    iniFile += "map = maps\\sscai\\" + map + newLine + newLine;

    iniFile += "race = " + race + newLine + newLine;

    iniFile += "enemy_count = 1" + newLine + newLine;

    iniFile += "enemy_race = " + enemyRace + newLine + newLine;

    iniFile += "[config]" + newLine;

    iniFile += "[window]" + newLine;
    iniFile += "windowed = ON" + newLine;
    iniFile += "width  = 1024" + newLine;
    iniFile += "height = 768" + newLine + newLine;
    return iniFile;
  }
}
